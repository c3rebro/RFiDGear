<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
	<!--
   THANKS To: Helge Klein for this Sample!

   Unattended setup: The following variables can be set:
   -  INSTALLDIR: Full path to the installation directory
   -->
	
	<!--
      ====================================================================================
      Defines & Variables
   -->
	
	<?define VersionNumber="!(bind.FileVersion.RFiDGear.exe)" ?>
	
	<!--
   Upgrade code HAS to be the same for all updates.
   Once you've chosen it don't change it.
   -->
	<?define UpgradeCode="a34bc413-e349-4fd1-8b90-2eb95a333436" ?>
	
	<!-- The URL for add/remove programs -->
	<?define InfoURL="http://rfidgear.hyperstack.de" ?>
	<?define RFIDGear_ProgramDataDir = "CommonAppDataFolder" ?>
	
	<!-- 32-bit / 64-bit variables -->
	<?if $(var.Platform) = x64 ?>
	<?define Win64 = "yes" ?>
	<?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
	<?define ISLOG_ProgramDataDir = "C:\Program Files (x86)\Common Files\ISLOG\LibLogicalAccess\1.87.0.1024" ?>
	<?define RFiDGearExeSourcePath = "$(var.ProjectDir)..\RFiDGear\bin\Release\RFiDGear.exe" ?>
	<?else ?>
	<?define Win64 = "no" ?>
	<?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
	<?define ISLOG_ProgramDataDir = "C:\Program Files\Common Files\ISLOG\LibLogicalAccess\1.87.0.1024" ?>
	<?define RFiDGearExeSourcePath = "$(var.ProjectDir)..\RFiDGear\bin\Release\RFiDGear.exe" ?>
	<?endif ?>
	
	<!--
      ====================================================================================
      Package start $(var.EventMessenger.ProjectDir)Resources\!(loc.LicenseRtf)
   -->
	
	<!-- The upgrade code must never change as long as the product lives! -->
	<!-- Product IDs must be autogenerated (*) or else major upgrades will not work -->
	<Product Id="*" Name="$(var.RFiDGear.ProjectName)" Language="1033" Version="$(var.VersionNumber)" Manufacturer="!(loc.ManufacturerFullName)" UpgradeCode="$(var.UpgradeCode)">
		<!-- Package IDs are valid for a single package version only - they are autogenerated by WiX -->
		<!-- Let's require Windows Installer 4.0 (included in Vista) -->
		<!-- And ALWAYS install per machine!!! -->
		<Package Id="*" InstallerVersion="400" Compressed="yes" InstallScope="perMachine" Description="!(loc.ProductDescription)" Comments="!(loc.Comments) $(var.VersionNumber)" />
		<!-- License agreement text: dummy. Real text is set in WXS file -->
		<WixVariable Id="WixUILicenseRtf" Value="$(var.RFiDGear.ProjectDir)Resources\license.rtf" Overridable="yes"/>
		<!-- UI customization -->
		<!-- <WixVariable Id="WixUIBannerBmp" Value="images\BannerTop.bmp" />-->
		<!--<WixVariable Id="WixUIDialogBmp" Value="images\Dialog.bmp" />-->
		<!-- Define icons (ID should not be longer than 18 chars and must end with ".exe") -->
		<Icon Id="Icon.exe" SourceFile="$(var.RFiDGear.ProjectDir)Resources\logo.ico" />
		
		<PropertyRef Id="WIX_IS_NETFRAMEWORK_452_OR_LATER_INSTALLED" />
		
		<Property Id="HAS_RFIDGEAR_PROGRAMDATADIR">
			<DirectorySearch Id="ProgramDataPathSearch" Path="$(var.RFIDGear_ProgramDataDir)" />
		</Property>
		
		<Property Id="SYSTEM_HAS_ISLOG">
			<DirectorySearch Id="ProgramFilesPathSearch" Path="$(var.ISLOG_ProgramDataDir)" />
		</Property>
		
		<!-- Set properties for add/remove programs -->
		<Property Id="ARPPRODUCTICON" Value="Icon.exe" />
		<Property Id="ARPHELPLINK" Value="$(var.InfoURL)" />
		<Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
		<!-- Remove repair -->
		<Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
		<!-- Remove modify -->
		<!-- Upgrade logic -->
		<!-- AllowSameVersionUpgrades -> Always upgrade, never allow two versions to be installed next to each other -->
		<!-- AllowSameVersionUpgrades causes ICE61 which must be ignored -->
		<MajorUpgrade DowngradeErrorMessage="!(loc.NewerInstalled)" AllowSameVersionUpgrades="no" />
		<!-- This is the main installer sequence run when the product is actually installed -->
		<InstallExecuteSequence>
			<!-- Determine the install location after the install path has been validated by the installer -->
			<Custom Action="SetARPINSTALLLOCATION" After="InstallValidate">
			</Custom>
		</InstallExecuteSequence>
		<!-- Set up ARPINSTALLLOCATION property (http://blogs.technet.com/b/alexshev/archive/2008/02/09/from-msi-to-wix-part-2.aspx) -->
		<CustomAction Id="SetARPINSTALLLOCATION" Property="ARPINSTALLLOCATION" Value="[INSTALLDIR]" />
		<!--
         Launch conditions
 
         1. Check minimum OS version 
            If not, the installation is aborted.
            By doing the (Installed OR ...) property means that this condition will only be evaluated if the app is being installed and not on uninstall or changing
 
            Note: Under a Product element, a condition becomes a LaunchCondition entry. 
      -->
		<Condition Message="!(loc.OS2Old)"><![CDATA[Installed OR (VersionNT >= 601)]]></Condition>
		<Condition Message="!(loc.NetFramework452Required)"><![CDATA[Installed OR WIX_IS_NETFRAMEWORK_452_OR_LATER_INSTALLED]]></Condition>
		<Condition Message="!(loc.LibLogicalAccessRequired)"><![CDATA[Installed OR SYSTEM_HAS_ISLOG]]></Condition>
		<!--
         2. Check OS bitness
            Unfortunately 32-bit MSI packages cannot write to 64-bit ProgramFiles directory. That is the only reason we need separate MSIs for 32-bit and 64-bit.
      -->
		<!--    <?if $(var.Platform) = x64 ?>
    <Condition Message="!(loc.x86VersionRequired)"><![CDATA[VersionNT64]]></Condition>
		<?endif ?>
		<?if $(var.Platform) = x86 ?>
		<Condition Message="!(loc.x64VersionRequired)"><![CDATA[NOT VersionNT64]]></Condition>
		<?endif ?>-->
		
		<!--
         Launch conditions end
      -->
		<!-- Save the command line value INSTALLDIR and restore it later in the sequence or it will be overwritten by the value saved to the registry during an upgrade -->
		<!-- http://robmensching.com/blog/posts/2010/5/2/the-wix-toolsets-remember-property-pattern/ -->
		<CustomAction Id="SaveCmdLineValueINSTALLDIR" Property="CMDLINE_INSTALLDIR" Value="[INSTALLDIR]" Execute="firstSequence" />
		<CustomAction Id="SetFromCmdLineValueINSTALLDIR" Property="INSTALLDIR" Value="[CMDLINE_INSTALLDIR]" Execute="firstSequence" />
		<InstallUISequence>
			<Custom Action="SaveCmdLineValueINSTALLDIR" Before="AppSearch" />
			<Custom Action="SetFromCmdLineValueINSTALLDIR" After="AppSearch">
			CMDLINE_INSTALLDIR
			</Custom>
		</InstallUISequence>
		<InstallExecuteSequence>
			<Custom Action="SaveCmdLineValueINSTALLDIR" Before="AppSearch" />
			<Custom Action="SetFromCmdLineValueINSTALLDIR" After="AppSearch">
			CMDLINE_INSTALLDIR
			</Custom>
		</InstallExecuteSequence>
		<!-- Save the command line value SERVERS and restore it later in the sequence or it will be overwritten by the value saved to the registry during an upgrade -->
		<!-- http://robmensching.com/blog/posts/2010/5/2/the-wix-toolsets-remember-property-pattern/ -->
		<CustomAction Id="SaveCmdLineValueSERVERS" Property="CMDLINE_SERVERS" Value="[SERVERS]" Execute="firstSequence" />
		<CustomAction Id="SetFromCmdLineValueSERVERS" Property="SERVERS" Value="[CMDLINE_SERVERS]" Execute="firstSequence" />
		<InstallUISequence>
			<Custom Action="SaveCmdLineValueSERVERS" Before="AppSearch" />
			<Custom Action="SetFromCmdLineValueSERVERS" After="AppSearch">
			CMDLINE_SERVERS
			</Custom>
		</InstallUISequence>
		<InstallExecuteSequence>
			<Custom Action="SaveCmdLineValueSERVERS" Before="AppSearch" />
			<Custom Action="SetFromCmdLineValueSERVERS" After="AppSearch">
			CMDLINE_SERVERS
			</Custom>
		</InstallExecuteSequence>
		<!-- Determine the directory of a previous installation (if one exists). If not INSTALLDIR stays empty -->
		<Property Id="INSTALLDIR">
			<RegistrySearch Id="DetermineInstallLocation" Type="raw" Root="HKLM" Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)" Name="InstallLocation" />
		</Property>
		<!-- Determine the servers of a previous installation -->
		<Property Id="SERVERS">
			<RegistrySearch Id="DetermineServers" Type="raw" Root="HKLM" Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)" Name="Servers" />
		</Property>
		<!-- Set default value if registry search comes up empty -->
		<!--
         ====================================================================================
         Start to build directory structure
      -->
		<!-- We do not have more than one medium (Floppy, CD, ...). Everything in one file. -->
		<Media Id="1" Cabinet="data.cab" EmbedCab="yes" />
		<!-- Outermost folder (kind of virtual). Fixed entry. -->
		<Directory Id="TARGETDIR" Name="SourceDir">
			<!-- We start building our directory structure here -->
			<!-- "ProgramFilesFolder" is a variable containing the absolute path. -->
			<!-- For a list of folder variables, see: http://msdn.microsoft.com/en-us/library/aa372057%28VS.85%29.aspx -->
			<Directory Id="$(var.PlatformProgramFilesFolder)" Name="root">
				<!-- All folders from here on are relative to their parent. -->
				<Directory Id="ProgramFilesHK" Name="!(loc.ManufacturerName)">
					<!-- INSTALLDIR is a property name. We need it later for the UI (to be able to change the install dir. -->
					<Directory Id="INSTALLDIR" Name="!(loc.ApplicationName)">
						<!-- Define components, the building blocks of MSIs. -->
						<!-- Rule: A component should only contain items that belong together so strongly that they always need to be installed or removed together. -->
						<!-- If this means a single file, then your components will contain a single file each. This is not only normal but exactly what you're -->
						<!-- to do. Don't be afraid, Windows Installer can efficiently handle thousands of components or more, if needed. -->
						<!-- Installation directory as a component so it can be emptied during uninstall (by default files added by someone other than Windows Installer are not removed) -->
						<!-- Main program file -->
						<!-- Configuration file -->
						<!--<Component Id="uberAgent.conf_comp" Guid="7448780e-b66a-43d3-be5a-eeba38a821ef">
																															<File Source="$(var.ProjectDir)..\uberAgent\Config file\Standalone mode\uberAgent.conf" Id="uberAgentConf" KeyPath="yes" />
																															<IniFile Id="ConfigFile" Action="addLine" Directory="INSTALLDIR" Name="uberAgent.conf" Section="Receiver" Key="Servers" Value="[SERVERS]" />
																														</Component>-->
						<Component Id="GalaSoftMvvmLightDll" Guid="40A4382E-00AA-479A-923F-0B45401700BB" DiskId="1">
							<File Id="GalaSoft.MvvmLight.dll" Name="GalaSoft.MvvmLight.dll" Source="..\RFiDGear\bin\Release\GalaSoft.MvvmLight.dll" KeyPath="yes" />
						</Component>
						<Component Id="InteropLibLogicalAccessDll" Guid="266E1A03-2C6B-444E-8017-1DBE01B19B24" DiskId="1">
							<File Id="Interop.LibLogicalAccess.dll" Name="Interop.LibLogicalAccess.dll" Source="..\RFiDGear\bin\Release\Interop.LibLogicalAccess.dll" KeyPath="yes" />
						</Component>
						<Component Id="IonicZipReducedDll" Guid="DC246BF8-25A3-42BF-A2A5-CEE429219381" DiskId="1">
							<File Id="Ionic.Zip.Reduced.dll" Name="Ionic.Zip.Reduced.dll" Source="..\RFiDGear\bin\Release\Ionic.Zip.Reduced.dll" KeyPath="yes" />
						</Component>
						<Component Id="RFiDGearExe" Guid="08A86D18-98BA-486E-BC08-42079879AE51" DiskId="1">
							<File Id="RFiDGear.exe" Name="RFiDGear.exe" Source="..\RFiDGear\bin\Release\RFiDGear.exe" KeyPath="yes" />
							<Shortcut Id="ExeShortcut" Directory="ProgramMenuFolder" Name="RFiDGear" Advertise="yes" Icon="StartMenuIcon.exe" IconIndex="0" />
						</Component>
						<Component Id="RFiDGearexeConfig" Guid="3C27CBCF-FE57-4F75-B77D-09899C143820" DiskId="1">
							<File Id="RFiDGear.exe.config" Name="RFiDGear.exe.config" Source="..\RFiDGear\bin\Release\RFiDGear.exe.config" KeyPath="yes" />
						</Component>
						<Component Id="SystemWindowsInteractivityDll" Guid="8B273297-D912-41FB-B9BB-869932B3E6B8" DiskId="1">
							<File Id="System.Windows.Interactivity.dll" Name="System.Windows.Interactivity.dll" Source="..\RFiDGear\bin\Release\System.Windows.Interactivity.dll" KeyPath="yes" />
						</Component>
						<Directory Id="de" Name="de">
							<Component Id="RFiDGearresourcesDll" Guid="FE7313B1-B080-42C2-8168-AD360BC920B9" DiskId="1">
								<File Id="RFiDGear.resources.dll" Name="RFiDGear.resources.dll" Source="..\RFiDGear\bin\Release\de\RFiDGear.resources.dll" KeyPath="yes" />
							</Component>
						</Directory>
						<Directory Id="en" Name="en">
							<Component Id="EnRFiDGearresourcesDll" Guid="198673BA-F9F7-4EEC-BBD5-9D810F89150C" DiskId="1">
								<File Id="en.RFiDGear.resources.dll" Name="RFiDGear.resources.dll" Source="..\RFiDGear\bin\Release\en\RFiDGear.resources.dll" KeyPath="yes" />
							</Component>
						</Directory>
						<Component Id="MVVMDialogsDll" Guid="1E11FAF7-1CD6-49A4-AC0C-ED87A237C1CD" DiskId="1">
							<File Id="MVVMDialogs.dll" Name="MVVMDialogs.dll" Source="..\RFiDGear\bin\Release\MVVMDialogs.dll" KeyPath="yes" />
						</Component>
						<Component Id="PluginSystemDll" Guid="B6782BE0-4826-4FDD-AAF0-5660ECAAE6AA" DiskId="1">
							<File Id="PluginSystem.dll" Name="PluginSystem.dll" Source="..\RFiDGear\bin\Release\PluginSystem.dll" KeyPath="yes" />
						</Component>
						<Component Id="CommonServiceLocatorDll" Guid="5CA5CB50-8EA8-4EBF-AA40-6BC120B61AC7" DiskId="1">
							<File Id="CommonServiceLocator.dll" Name="CommonServiceLocator.dll" Source="..\RFiDGear\bin\Release\CommonServiceLocator.dll" KeyPath="yes" />
						</Component>
					</Directory>
				</Directory>
			</Directory>
			<Directory Id="$(var.RFIDGear_ProgramDataDir)" Name="plugins">
				<!-- All folders from here on are relative to their parent. -->
				<!-- Define components, the building blocks of MSIs. -->
				<!-- Rule: A component should only contain items that belong together so strongly that they always need to be installed or removed together. -->
				<!-- If this means a single file, then your components will contain a single file each. This is not only normal but exactly what you're -->
				<!-- to do. Don't be afraid, Windows Installer can efficiently handle thousands of components or more, if needed. -->
				<!-- Installation directory as a component so it can be emptied during uninstall (by default files added by someone other than Windows Installer are not removed) -->
				<Directory Id="RFiDGearProgramDataFolder" Name="!(loc.ApplicationName)">
					<Directory Id="RFiDGearExtensionsFolder" Name="Extensions">
						<Directory Id="RFiDGearExtionsVCNEditor" Name="VCNEditor">
							<Component Id="ByteArrayDll" Guid="0907B20F-F549-4005-89A2-645C550BB7E7" DiskId="1">
								<File Id="ByteArray.dll" Name="ByteArray.dll" Source="..\VCNEditor\bin\Release\ByteArray.dll" KeyPath="yes" />
							</Component>
							<Component Id="VCNEditorDll" Guid="DF58305F-6D10-49D0-865E-F0DC41224925" DiskId="1">
								<File Id="VCNEditor.dll" Name="VCNEditor.dll" Source="..\VCNEditor\bin\Release\VCNEditor.dll" KeyPath="yes" />
							</Component>
						</Directory>
					</Directory>
				</Directory>
			</Directory>
			<!-- Registry entries -->
			<Component Id="RegValInstallLocation_comp" Guid="7448780e-b66a-43d3-be5a-eeba38a821ee">
				<!-- Do NOT use the application's default registry key here, because THIS key will be removed on uninstall
																								                 (important when installing a newer version, because that is uninstall followed by install) -->
				<RegistryKey Root="HKLM" Key="Software\!(loc.ManufacturerName)\InstalledProducts\!(loc.ApplicationName)">
					<RegistryValue Name="InstallLocation" Value="[INSTALLDIR]" Type="string" KeyPath="yes" />
				</RegistryKey>
			</Component>
			<Directory Id="ProgramMenuFolder">
				<Directory Id="ApplicationProgramsFolder" Name="RFiDGear">
					<Component Id="StartMenuShortcuts" Guid="D5357D5D-17BA-4E6E-AF2B-E21312A0400D">
						<RemoveFolder Id="ProgramMenuDir" On="uninstall" />
						<RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]" Type="string" Value="" />
					</Component>
				</Directory>
			</Directory>
		</Directory>
		<!--
         End of directory structure
         ====================================================================================
      -->
		<!-- Features define which parts of the application can be installed in a custom installation -->
		<Feature Id="Complete" Title="!(loc.ApplicationName)" Description="!(loc.FeatureCompleteDescription)" Display="expand" Level="1" ConfigurableDirectory="INSTALLDIR">
			<!-- A feature block for the main (GUI) program and all its dependencies -->
			<Feature Id="MainProgram" Title="!(loc.FeatureMainProgramTitle)" Description="!(loc.FeatureMainProgramDescription)" Level="1">
				<ComponentRef Id="GalaSoftMvvmLightDll" />
				<ComponentRef Id="InteropLibLogicalAccessDll" />
				<ComponentRef Id="IonicZipReducedDll" />
				<ComponentRef Id="CommonServiceLocatorDll" />
				<ComponentRef Id="RFiDGearExe" />
				<ComponentRef Id="RFiDGearexeConfig" />
				<ComponentRef Id="SystemWindowsInteractivityDll" />
				<ComponentRef Id="RFiDGearresourcesDll" />
				<ComponentRef Id="EnRFiDGearresourcesDll" />
				<ComponentRef Id="PluginSystemDll" />
				<ComponentRef Id="MVVMDialogsDll" />
				
				<ComponentRef Id="RegValInstallLocation_comp" />
			</Feature>
			
			<Feature Id="StartMenu" Title="!(loc.FeatureStartMenuTitle)" Description="!(loc.FeatureStartMenuDescription)" Level="1">
				<ComponentRef Id="StartMenuShortcuts" />
			</Feature>
			
			<Feature Id="Plugins" Title="!(loc.FeaturePluginsTitle)" Description="!(loc.FeaturePluginsDescription)" Level="1">
				<!--<ComponentRef Id="RFiDGearProgramDataFolder" />-->
				<ComponentRef Id="ByteArrayDll" />
				<ComponentRef Id="VCNEditorDll" />
			</Feature>
		</Feature>
		<UI>
			<!-- Define the installer UI / WixUI_Mondo / WixUI_HK -->
			<UIRef Id="WixUI_Mondo" />
		</UI>
		<Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
		<Icon Id="StartMenuIcon.exe" SourceFile="..\RFiDGear\bin\Release\RFiDGear.exe" />
	</Product>
</Wix>