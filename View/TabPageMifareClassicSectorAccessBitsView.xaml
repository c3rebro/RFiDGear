<?xml version="1.0" encoding="utf-8"?>
<UserControl
	x:Class="RFiDGear.View.TabPageMifareClassicSectorAccessBitsView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:RFiDGear" xmlns:dal="clr-namespace:RFiDGear.DataAccessLayer"
	mc:Ignorable="d">
	<UserControl.Resources>
		<local:BindingProxy
			x:Key="proxy"
			Data="{Binding}" />
		<local:ResourceLoader
			x:Key="Localization" />
		<!--<ContextMenu  x:Key="RowMenu" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RowContextMenu}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem" >
					<Setter
						Property="HorizontalContentAlignment"
						Value="Left" />
					<Setter
						Property="VerticalContentAlignment"
						Value="Center" />
				</Style>
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>-->
	</UserControl.Resources>
	<Grid>
		<Grid
			Margin="0,0,0,0"
			VerticalAlignment="Stretch"
			HorizontalAlignment="Stretch"
			Grid.Row="0"
			Grid.Column="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="*" />
				<ColumnDefinition
					Width="5" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<GridSplitter
				ResizeBehavior="PreviousAndNext"
				ResizeDirection="Auto"
				Background="#FFD9D9DB"
				Margin="0,0,0,0"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				Grid.Row="0"
				Grid.Column="1"
				Width="5" />
			<GroupBox
				Header="Sector Trailer | Access Bits"
				IsEnabled="{Binding IsAccessBitsEditTabEnabled}"
				Grid.Column="0"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Margin="8,8,8,8">
				<Grid
					VerticalAlignment="Stretch"
					Margin="0,0,0,0"
					HorizontalAlignment="Stretch">
					<DataGrid
						ItemsSource="{Binding SectorTrailerSource}"
						AutoGenerateColumns="False"
						SelectedItem="{Binding Path=Selected_Sector_AccessCondition}"
						CanUserReorderColumns="True"
						AlternatingRowBackground="LightGray"
						CanUserAddRows="False"
						SelectionMode="Single"
						CanUserSortColumns="True"
						Background="Transparent"
						Grid.Column="0"
						Grid.Row="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Margin="8,8,8,8">
						<DataGrid.Resources>
							<SolidColorBrush
								x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
								Color="DodgerBlue" />
						</DataGrid.Resources>
						<DataGrid.Columns>
							<!-- <DataGridTextColumn
					Header="{Binding Data.LocalizationResourceSet,
					Converter={StaticResource Localization},
					ConverterParameter='dataGridHeaderUnlockEventConfigDialogTriggerType',
					Source={StaticResource proxy}}"
					IsReadOnly="True"
					Binding="{Binding Path=DoorMonitoringTrigger, Converter={StaticResource Localization}, ConverterParameter={x:Type local:DoorMonEventType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />  -->
							<DataGridTextColumn
								Header="Read Key A"
								IsReadOnly="True"
								Binding="{Binding Path=Read_KeyA, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Write Key A"
								IsReadOnly="True"
								Binding="{Binding Path=Write_KeyA, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Read Access Bits"
								IsReadOnly="True"
								Binding="{Binding Path=Read_AccessCondition_MifareClassicSectorTrailer, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Write Access Bits"
								IsReadOnly="True"
								Binding="{Binding Path=Write_AccessCondition_MifareClassicSectorTrailer, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Read Key B"
								IsReadOnly="True"
								Binding="{Binding Path=Read_KeyB, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Write Key B"
								IsReadOnly="True"
								Binding="{Binding Path=Write_KeyB, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<!--<DataGridTemplateColumn
								Header="tadaaa">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<ComboBox />
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>-->
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</GroupBox>
			<GroupBox
				Header="Data Block | Access Bits"
				IsEnabled="{Binding IsAccessBitsEditTabEnabled}"
				Grid.Column="2"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Margin="7,8,8,8">
				<Grid
					VerticalAlignment="Stretch"
					Margin="0,0,0,0"
					HorizontalAlignment="Stretch">
					<DataGrid
						ItemsSource="{Binding DataBlockSource}"
						AutoGenerateColumns="False"
						SelectedItem="{Binding Path=Selected_DataBlock_AccessCondition}"
						CanUserReorderColumns="True"
						AlternatingRowBackground="LightGray"
						CanUserAddRows="False"
						SelectionMode="Single"
						CanUserSortColumns="True"
						Background="Transparent"
						Grid.Column="0"
						Grid.ColumnSpan="3"
						Grid.Row="2"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						Margin="8,2,7,7">
						<DataGrid.Resources>
							<SolidColorBrush
								x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
								Color="DodgerBlue" />
						</DataGrid.Resources>
						<DataGrid.Columns>
							<!-- <DataGridTextColumn
					Header="{Binding Data.LocalizationResourceSet,
					Converter={StaticResource Localization},
					ConverterParameter='dataGridHeaderUnlockEventConfigDialogTriggerType',
					Source={StaticResource proxy}}"
					IsReadOnly="True"
					Binding="{Binding Path=DoorMonitoringTrigger, Converter={StaticResource Localization}, ConverterParameter={x:Type local:DoorMonEventType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />  -->
							<DataGridTextColumn
								Header="Read Data Block"
								IsReadOnly="True"
								Binding="{Binding Path=Read_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Write Data Block"
								IsReadOnly="True"
								Binding="{Binding Path=Write_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Inc. Data Block"
								IsReadOnly="True"
								Binding="{Binding Path=Increment_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<DataGridTextColumn
								Header="Dec. Data Block"
								IsReadOnly="True"
								Binding="{Binding Path=Decrement_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}" />
							<!--							<DataGridTemplateColumn
								Header="tadaaa">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<ComboBox />
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>-->
						</DataGrid.Columns>
					</DataGrid>
					<Label
						Content="DataBlock Selection"
						Height="26"
						Grid.Column="0"
						Grid.Row="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top"
						Margin="8,9,7,0" />
					<ComboBox
						ItemsSource="{local:Enumerate {x:Type dal:SectorTrailer_DataBlock}}"
						SelectedItem="{Binding Selected_DataBlockType,Converter={StaticResource Localization},ConverterParameter={x:Type dal:SectorTrailer_DataBlock},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
						IsEnabled="{Binding DataBlockSelectionComboBoxIsEnabled}"
						Height="26"
						Width="90"
						Grid.Column="1"
						Grid.Row="0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Margin="9,9,0,0" />
					<CheckBox
						IsChecked="{Binding DataBlockIsCombinedToggleButtonIsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						Content="Combined"
						HorizontalContentAlignment="Left"
						VerticalContentAlignment="Center"
						Canvas.Top="8"
						Canvas.Left="194"
						Width="81"
						Height="16"
						Grid.Row="0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Grid.Column="2"
						Margin="12,14,0,0" />
					<Label
						Content="Sector Trailer:"
						Canvas.Top="38"
						Canvas.Left="582"
						Height="27"
						Width="85"
						Grid.Column="0"
						Grid.Row="1"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Margin="8,2,0,0" />
					<TextBox
						Text="{Binding SectorTrailer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						FontFamily="Lucida Console"
						BorderThickness="1,1,1,1"
						Height="26"
						Grid.Column="1"
						Grid.ColumnSpan="2"
						Grid.Row="1"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top"
						Margin="9,3,7,0" >
						<TextBox.Resources>
							<Style
								TargetType="TextBox">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding IsValidSectorTrailer}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Green" />
										<Setter
											Property="Background"
											Value="White" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding IsValidSectorTrailer}"
										Value="False">
										<Setter
											Property="Foreground"
											Value="Black" />
										<Setter
											Property="Background"
											Value="Red" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Resources>
					</TextBox>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="150" />
						<ColumnDefinition
							Width="100" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="42" />
						<RowDefinition
							Height="36" />
						<RowDefinition
							Height="0.428309803725103*" />
					</Grid.RowDefinitions>
				</Grid>
			</GroupBox>
		</Grid>
	</Grid>
</UserControl>