<?xml version="1.0" encoding="utf-8"?>
<UserControl
	x:Class="RFiDGear.View.TabPageMifareClassicDataExplorerView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:RFiDGear"
	xmlns:dal="clr-namespace:RFiDGear.DataAccessLayer"
	mc:Ignorable="d">
	<UserControl.Resources>
		<local:BindingProxy
			x:Key="proxy"
			Data="{Binding}" />
		<local:ResourceLoader
			x:Key="Localization" />
		<!--<ContextMenu  x:Key="RowMenu" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RowContextMenu}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem" >
					<Setter
						Property="HorizontalContentAlignment"
						Value="Left" />
					<Setter
						Property="VerticalContentAlignment"
						Value="Center" />
				</Style>
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>-->
	</UserControl.Resources>
	<Grid>
		<Grid
			Margin="0,0,0,0"
			VerticalAlignment="Stretch"
			HorizontalAlignment="Stretch"
			Grid.Row="0"
			Grid.Column="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="*" />
				<ColumnDefinition
					Width="5" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<GridSplitter
				ResizeBehavior="PreviousAndNext"
				ResizeDirection="Auto"
				Background="#FFD9D9DB"
				Margin="0,0,0,0"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				Grid.Row="0"
				Grid.Column="1"
				Width="5" />
			<GroupBox
				Header="Data"
				IsEnabled="{Binding IsDataExplorerEditTabEnabled}"
				Grid.Column="0"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Margin="8,8,8,8">
				<Grid
					VerticalAlignment="Stretch"
					Margin="0,0,0,0"
					HorizontalAlignment="Stretch">
					<DataGrid
						ItemsSource="{Binding ParentNodeViewModel.Children/Children, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
						AutoGenerateColumns="False"
						
						CanUserReorderColumns="False"
						CanUserSortColumns="False"
						CanUserAddRows="False"
						Background="Transparent"
						AlternatingRowBackground="LightGray">
						<!--SelectedItem="{Binding SelectedDataGridItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"-->
						
						<DataGrid.RowStyle>
							<Style TargetType="{x:Type DataGridRow}">
								<!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
								<!--<Setter Property="ToolTip" Value="{StaticResource DescriptionToolTip}" />-->
								<!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
								<Setter Property="Header" Value="{Binding GrandChildNodeHeader}" />
								<Setter Property="HorizontalContentAlignment" Value="Center" />
								<Setter Property="VerticalContentAlignment" Value="Center" />
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding IsValidDataBlockContent}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Green" />
										<Setter
											Property="FontWeight"
											Value="Bold" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding IsValidDataBlockContent}"
										Value="False">
										<Setter
											Property="Foreground"
											Value="Red" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						
						</DataGrid.RowStyle>
						
						<!--	{Binding Data.LocalizationResourceSet,
								Converter={StaticResource Localization},
								ConverterParameter='dataGridHeaderMainWindowEventName',
								Source={StaticResource proxy}}-->
						
						<DataGrid.Columns>
							<DataGridTextColumn
								Header="Hex"
								Binding="{Binding DataBlockAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								FontFamily="Lucida Console"	>
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="VerticalAlignment" Value="Center" />
										<Setter Property="HorizontalAlignment" Value="Center" />
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
							
							<DataGridTextColumn
								Header="String"
								Binding="{Binding DataBlockAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								FontFamily="Lucida Console">
								<DataGridTextColumn.ElementStyle>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="VerticalAlignment" Value="Center" />
										<Setter Property="HorizontalAlignment" Value="Center" />
										<!--<EventSetter Event="KeyDown" Handler="{Binding StaticResource proxy}" />-->
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>
						
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</GroupBox>
			<GroupBox
				Header="Data Block | Access Bits"
				IsEnabled="{Binding IsAccessBitsEditTabEnabled}"
				Margin="7,8,8,8"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				Grid.Row="0"
				Grid.Column="2">
				<Grid
					VerticalAlignment="Stretch"
					Margin="0,0,0,0"
					HorizontalAlignment="Stretch">
					<Label
						Content="DataBlock Selection"
						Height="26"
						Grid.Column="0"
						Grid.Row="0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top"
						Margin="8,9,7,0" />
					<ComboBox
						ItemsSource="{local:Enumerate {x:Type dal:Data_Block}}"
						SelectedItem="{Binding Selected_DataBlockType,Converter={StaticResource Localization},ConverterParameter={x:Type dal:Data_Block},UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
						IsEnabled="{Binding DataBlockSelectionComboBoxIsEnabled}"
						Height="26"
						Width="90"
						Grid.Column="1"
						Grid.Row="0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Margin="9,9,0,0" />
					<CheckBox
						IsChecked="{Binding DataBlockIsCombinedToggleButtonIsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						Content="Combined"
						HorizontalContentAlignment="Left"
						VerticalContentAlignment="Center"
						Canvas.Top="8"
						Canvas.Left="194"
						Width="81"
						Height="16"
						Grid.Row="0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Grid.Column="2"
						Margin="12,14,0,0" />
					<Label
						Content="Sector Trailer:"
						Canvas.Top="38"
						Canvas.Left="582"
						Height="27"
						Width="85"
						Grid.Column="0"
						Grid.Row="1"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Margin="8,2,0,0" />
					<TextBox
						Text="{Binding SectorTrailer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
						FontFamily="Lucida Console"
						BorderThickness="1,1,1,1"
						Height="26"
						Grid.Column="1"
						Grid.ColumnSpan="2"
						Grid.Row="1"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top"
						Margin="9,3,7,0">
						<TextBox.Resources>
							<Style
								TargetType="TextBox">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding IsValidSectorTrailer}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Green" />
										<Setter
											Property="Background"
											Value="White" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding IsValidSectorTrailer}"
										Value="False">
										<Setter
											Property="Foreground"
											Value="Black" />
										<Setter
											Property="Background"
											Value="Red" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Resources>
					</TextBox>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="150" />
						<ColumnDefinition
							Width="100" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="42" />
						<RowDefinition
							Height="36" />
						<RowDefinition
							Height="0.428309803725103*" />
					</Grid.RowDefinitions>
				</Grid>
			</GroupBox>
		</Grid>
	</Grid>
</UserControl>