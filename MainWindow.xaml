<?xml version="1.0" encoding="utf-8"?>
<Controls:MetroWindow
	x:Class="RFiDGear.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:dlgs="clr-namespace:MvvmDialogs.Behaviors" xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	dlgs:DialogBehavior.DialogViewModels="{Binding Dialogs}" xmlns:local="clr-namespace:RFiDGear"
	x:Name="homeWindow"
	mc:Ignorable="d"
	Title="RFiDGear"
	Height="461"
	Width="715"
	BorderThickness="0"
	FontFamily="Segoe UI"
	HorizontalContentAlignment="Left"
	SizeToContent="Manual"
	GlowBrush="Black"
	Topmost="False"
	WindowTransitionsEnabled="False"
	WindowStartupLocation="CenterScreen"
	FontWeight="Normal"
	MouseLeftButtonDown="WindowMouseLeftButtonDown"
	DataContext="{Binding Source={StaticResource Locator}, Path=Main}">
	<Grid>
		<Grid
			Grid.Column="0"
			Grid.Row="0"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			Margin="15,36,8,8">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="200" />
				<ColumnDefinition
					Width="5" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<TreeView
				Grid.Column="0"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				HorizontalContentAlignment="Left"
				VerticalAlignment="Stretch"
				VerticalContentAlignment="Top"
				Margin="0,0,7,0"
				x:Name="treeView"
				ItemsSource="{Binding TreeViewParentNodes}"
				Background="{x:Null}"
				BorderThickness="1,1,1,1">
				<TreeView.ItemContainerStyle>
					<!-- This Style binds a TreeViewItem to a TreeViewModelBase. -->
					<Style
						TargetType="{x:Type TreeViewItem}">
						<Setter
							Property="IsExpanded"
							Value="{Binding IsExpanded, Mode=TwoWay}" />
						<Setter
							Property="IsSelected"
							Value="{Binding IsSelected, Mode=TwoWay}" />
						<Setter
							Property="FontWeight"
							Value="Normal" />
						<Style.Triggers>
							<Trigger
								Property="IsSelected"
								Value="True">
								<Setter
									Property="FontWeight"
									Value="Bold" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</TreeView.ItemContainerStyle>
				<TreeView.Resources>
					<HierarchicalDataTemplate
						DataType="{x:Type local:ViewModel.TreeViewParentNodeViewModel}"
						ItemsSource="{Binding Children}">
						<!-- <Image Width="16" Height="16" Margin="3,0" Source="Images\Region.png" /> -->
						<TextBlock
							Text="{Binding ParentNodeDisplayItem}">
							<TextBlock.ContextMenu>
								<ContextMenu
									ItemsSource="{Binding ContextMenu}"></ContextMenu>
							</TextBlock.ContextMenu>
						</TextBlock>
					</HierarchicalDataTemplate>
					<HierarchicalDataTemplate
						DataType="{x:Type local:ViewModel.TreeViewChildNodeViewModel}"
						ItemsSource="{Binding Children}">
						<HierarchicalDataTemplate.Resources>
							<Style
								TargetType="TextBlock">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding IsAuthenticated}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Green" />
										<Setter
											Property="FontWeight"
											Value="Bold" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding IsAuthenticated}"
										Value="False">
										<Setter
											Property="Foreground"
											Value="Red" />
										<Setter
											Property="FontWeight"
											Value="Normal" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding HasChanged}"
										Value="True">
										<Setter
											Property="Foreground"
											Value="Yellow" />
										<Setter
											Property="FontWeight"
											Value="Bold" />
									</DataTrigger>
									<DataTrigger
										Binding="{Binding HasChanged}"
										Value="False">
										<Setter
											Property="Foreground"
											Value="Green" />
										<Setter
											Property="FontWeight"
											Value="Bold" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</HierarchicalDataTemplate.Resources>
						<!-- <Image Width="16" Height="16" Margin="3,0" Source="Images\State.png" /> -->
						<TextBlock
							Text="{Binding ChildNodeDisplayItem}">
							<TextBlock.ContextMenu>
								<ContextMenu
									ItemsSource="{Binding ContextMenu}"></ContextMenu>
							</TextBlock.ContextMenu>
							<!--  <TextBlock.InputBindings>
								<MouseBinding
									Command="{Binding ReadSectorCommand}"
									MouseAction="LeftDoubleClick" />
							</TextBlock.InputBindings> -->
						</TextBlock>
					</HierarchicalDataTemplate>
					<DataTemplate
						DataType="{x:Type local:ViewModel.TreeViewGrandChildNodeViewModel}">
						<!-- <Image Width="16" Height="16" Margin="3,0" Source="Images\City.png" /> -->
						<TextBlock
							Text="{Binding GrandChildNodeDisplayItem}">
							<TextBlock.Resources>
								<Style
									TargetType="TextBlock">
									<Style.Triggers>
										<DataTrigger
											Binding="{Binding IsAuthenticated}"
											Value="True">
											<Setter
												Property="Foreground"
												Value="Green" />
											<Setter
												Property="FontWeight"
												Value="Bold" />
										</DataTrigger>
										<DataTrigger
											Binding="{Binding IsAuthenticated}"
											Value="False">
											<Setter
												Property="Foreground"
												Value="Red" />
											<Setter
												Property="FontWeight"
												Value="Normal" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Resources>
						</TextBlock>
					</DataTemplate>
				</TreeView.Resources>
			</TreeView>
			<GridSplitter
				Grid.Column="1"
				Width="5"
				HorizontalAlignment="Stretch"
				Background="#FFD9D9DB" />
			<DataGrid
				AutoGenerateColumns="True"
				AutoGeneratingColumn="OnAutoGeneratingColumn"
				Grid.Column="2"
				Grid.Row="0"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				BorderThickness="1,1,1,1"
				Margin="7,0,0,0"
				x:Name="dataGridCardContent"
				ItemsSource="{Binding DataGridSource, Mode=OneWay}"
				SelectedItem="{Binding SelectedDataGridItem}"
				Background="{x:Null}"
				BorderBrush="#FF020202"></DataGrid>
		</Grid>
		<DockPanel
			RenderTransformOrigin="0.5,0.5">
			<Menu
				DockPanel.Dock="Top"
				Background="{x:Null}">
				<MenuItem
					Header="{Binding MenuItem_FileHeader}"
					VerticalContentAlignment="Center"
					VerticalAlignment="Top">
					<MenuItem.Foreground>
						<SolidColorBrush
							Color="Black" />
					</MenuItem.Foreground>
					<MenuItem
						Header="_Open Project..."
						Command="{Binding NewOpenFileDialogCommand}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="_Save Project..."
						Command="{Binding NewOpenFileDialogCommand}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<Separator />
					<MenuItem
						Header="{Binding MenuItem_ExitHeader}"
						Command="{Binding CloseApplication}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="{Binding MenuItem_EditHeader}"
					VerticalContentAlignment="Center"
					VerticalAlignment="Top">
					<MenuItem.Foreground>
						<SolidColorBrush
							Color="Black" />
					</MenuItem.Foreground>
					<MenuItem
						Header="_Copy Selection to Clipboard">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="_Paste Clipboard to Selection">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<Separator />
					<MenuItem
						Header="_Edit Keys...">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="_Programming"
					VerticalContentAlignment="Center"
					VerticalAlignment="Top"
					RenderTransformOrigin="0.5,0.5">
					<MenuItem.Foreground>
						<SolidColorBrush
							Color="Black" />
					</MenuItem.Foreground>
					<MenuItem
						Header="_Read RFiD Chip"
						Command="{Binding ReadChipCommand}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="_Write RFiD Chip">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<Separator />
					<MenuItem
						Header="Read _from Selection">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="Write _to Selection">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
				</MenuItem>
				<MenuItem
					VerticalContentAlignment="Center"
					VerticalAlignment="Top"
					RenderTransformOrigin="0.5,0.5"
					Header="{Binding MenuItem_OptionsHeader}">
					<MenuItem.Foreground>
						<SolidColorBrush
							Color="Black" />
					</MenuItem.Foreground>
					<MenuItem
						Header="{Binding MenuItem_ReaderSettingsHeader}"
						Command="{Binding NewReaderSetupDialogCommand}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="_Language">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
						<RadioButton
							x:Name="radioButtonGerman"
							Content="german"
							IsChecked="{Binding RadioButtonGermanLanguageSelectedState, Mode=TwoWay}"
							Command="{Binding SwitchLanguageToGerman}" />
						<RadioButton
							x:Name="radioButtonEnglish"
							Content="english"
							IsChecked="{Binding RadioButtonEnglishLanguageSelectedState, Mode=TwoWay}"
							Command="{Binding SwitchLanguageToEnglish}" />
					</MenuItem>
				</MenuItem>
				<MenuItem
					Header="Help"
					VerticalContentAlignment="Center"
					VerticalAlignment="Top">
					<MenuItem.Foreground>
						<SolidColorBrush
							Color="Black" />
					</MenuItem.Foreground>
					<MenuItem
						IsCheckable="True"
						Header="_Check for Updates"
						IsChecked="{Binding IsCheckForUpdatesChecked, Mode=TwoWay}">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
					<MenuItem
						Header="_Help">
						<MenuItem.Foreground>
							<SolidColorBrush
								Color="Black" />
						</MenuItem.Foreground>
					</MenuItem>
				</MenuItem>
			</Menu>
		</DockPanel>
	</Grid>
</Controls:MetroWindow>