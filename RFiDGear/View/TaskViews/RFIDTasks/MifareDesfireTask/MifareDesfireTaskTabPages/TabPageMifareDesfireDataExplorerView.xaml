<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="RFiDGear.View.TabPageMifareDesfireDataExplorerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:_3rdP="clr-namespace:RFiDGear._3rdParty"
    xmlns:dal="clr-namespace:RFiDGear.DataAccessLayer"
    xmlns:islog="clr-namespace:LibLogicalAccess;assembly=Interop.LibLogicalAccess"
    xmlns:local="clr-namespace:RFiDGear"
    xmlns:v="clr-namespace:RFiDGear.View"
    xmlns:vm="clr-namespace:RFiDGear.ViewModel">

    <UserControl.Resources>
        <dal:BindingProxy x:Key="proxy" Data="{Binding}" />
        <dal:ResourceLoader x:Key="Localization" />
        <!--<ContextMenu  x:Key="RowMenu" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RowContextMenu}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem">
					<Setter
						Property="HorizontalContentAlignment"
						Value="Left" />
					<Setter
						Property="VerticalContentAlignment"
						Value="Center" />
				</Style>
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>-->
    </UserControl.Resources>
    <Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <GridSplitter
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="1"
                Width="5"
                Margin="0,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#FFD9D9DB"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Auto" />
            <GroupBox
                Grid.Row="0"
                Grid.Column="0"
                Margin="8,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='groupBoxHeaderMifareDesfireFileDataOnChip'}"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False"
                        CanUserReorderColumns="False"
                        CanUserSortColumns="False"
                        ItemsSource="{Binding ChildNodeViewModelFromChip.Children, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                        <!--  SelectedItem="{Binding SelectedDataGridItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  -->
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
                                <!--<Setter Property="ToolTip" Value="{StaticResource DescriptionToolTip}" />-->
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                                <Setter Property="Header" Value="{Binding GrandChildNodeHeader}" />
                                <Setter Property="MaxHeight" Value="140" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </DataGrid.RowStyle>
                        <!--
                            {Binding Data.LocalizationResourceSet,
                            Converter={StaticResource Localization},
                            ConverterParameter='dataGridHeaderMainWindowEventName',
                            Source={StaticResource proxy}}
                        -->
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Hex">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            MaxWidth="180"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            VerticalScrollBarVisibility="Auto">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <!--<Style.Triggers>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="True">
															<Setter
																Property="Foreground"
																Value="Black" />
														</DataTrigger>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="False">
															<Setter
																Property="Foreground"
																Value="Red" />
														</DataTrigger>
													</Style.Triggers>-->
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="String">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            MaxWidth="180"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <!--<Style.Triggers>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="True">
															<Setter
																Property="Foreground"
																Value="Black" />
														</DataTrigger>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="False">
															<Setter
																Property="Foreground"
																Value="Red" />
														</DataTrigger>
													</Style.Triggers>-->
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--<DataGridTextColumn
								Header="Hex"
								Binding="{Binding DataAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								FontFamily="Lucida Console"
								MaxWidth="180"
								
								IsReadOnly="True">
								
								<DataGridTextColumn.ElementStyle>
									<Style
										TargetType="{x:Type TextBlock}">
										<Setter
											Property="VerticalAlignment"
											Value="Top" />
										<Setter
											Property="HorizontalAlignment"
											Value="Left" />
										<Setter
											Property="TextWrapping"
											Value="Wrap"/>
									
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>-->
                            <!--<DataGridTextColumn
								Header="String"
								Binding="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								FontFamily="Lucida Console"
								MaxWidth="180"
								IsReadOnly="True">
								<DataGridTextColumn.ElementStyle>
									<Style
										TargetType="{x:Type TextBlock}">
										<Setter
											Property="VerticalAlignment"
											Value="Top" />
										<Setter
											Property="HorizontalAlignment"
											Value="Left" />
										<Setter
											Property="TextWrapping"
											Value="Wrap"/>
										<EventSetter Event="KeyDown" Handler="{Binding StaticResource proxy}" />
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Row="1"
                Grid.Column="0"
                Margin="8,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='groupBoxHeaderMifareDesfireFileDataOnMemory'}"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        AlternatingRowBackground="LightGray"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserReorderColumns="False"
                        CanUserSortColumns="False"
                        ItemsSource="{Binding ChildNodeViewModelTemp.Children, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        MaxColumnWidth="180">
                        <!--  SelectedItem="{Binding SelectedDataGridItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  -->
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
                                <!--<Setter Property="ToolTip" Value="{StaticResource DescriptionToolTip}" />-->
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                                <Setter Property="Header" Value="{Binding GrandChildNodeHeader}" />
                                <Setter Property="MaxHeight" Value="180" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="False">
                                        <Setter Property="Foreground" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Hex">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BindableSelectionLength="{Binding SelectedDataLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BindableSelectionStart="{Binding SelectedDataIndexStart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <!--  IsFocused="{Binding IsFocused}">  -->
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidSelectedDataIndexAndLength}" Value="True">
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidSelectedDataIndexAndLength}" Value="False">
                                                            <Setter Property="Foreground" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="String">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            MaxWidth="180"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            VerticalScrollBarVisibility="Auto">
                                            <!--  IsFocused="{Binding IsFocused}">  -->
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                    <Setter Property="VerticalAlignment" Value="Stretch" />
                                                    <!--<Style.Triggers>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="True">
															<Setter
																Property="Foreground"
																Value="Black" />
														</DataTrigger>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="False">
															<Setter
																Property="Foreground"
																Value="Red" />
														</DataTrigger>
													</Style.Triggers>-->
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--<DataGridTextColumn
								Header="String"
								Binding="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								FontFamily="Lucida Console">
								<DataGridTextColumn.ElementStyle>
									<Style
										TargetType="{x:Type TextBlock}">
										<Setter
											Property="VerticalAlignment"
											Value="Center" />
										<Setter
											Property="FontFamily"
											Value="Lucida Console" />
										<Setter
											Property="HorizontalAlignment"
											Value="Center" />
										<Setter
											Property="TextWrapping"
											Value="Wrap" />
										<Setter
											Property="VerticalScrollBarVisibility"
											Value="Auto" />
										<EventSetter Event="KeyDown" Handler="{Binding StaticResource proxy}" />
									</Style>
								</DataGridTextColumn.ElementStyle>
							</DataGridTextColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="8,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='groupBoxHeaderMifareDesfireFileReadWriteData'}"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Button
                        Grid.Row="7"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Height="23"
                        Margin="8,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Command="{Binding WriteDataCommand}"
                        Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='buttonContentMifareDesfireFileSetupWriteData'}" />
                    <Button
                        Grid.Row="8"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Height="23"
                        Margin="8,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Command="{Binding ReadDataCommand}"
                        Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='buttonContentMifareDesfireFileSetupReadData'}" />
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        Height="26"
                        Margin="9,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding DesfireReadKeyCurrent}">
                        <TextBox.Resources>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidDesfireReadKeyCurrent}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDesfireReadKeyCurrent}" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="8,9,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Read Key" />
                    <Label
                        Grid.Row="2"
                        Grid.Column="0"
                        Margin="8,2,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Write Key" />
                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="8,3,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Read Key Type" />
                    <Label
                        Grid.Row="3"
                        Grid.Column="0"
                        Margin="8,3,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Write Key Type" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        Height="26"
                        Margin="9,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding DesfireWriteKeyCurrent}">
                        <TextBox.Resources>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidDesfireWriteKeyCurrent}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDesfireWriteKeyCurrent}" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Height="26"
                        Margin="9,3,7,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        ItemsSource="{dal:Enumerate {x:Type islog:DESFireKeyType}}"
                        SelectedItem="{Binding SelectedDesfireReadKeyEncryptionType, Converter={StaticResource Localization}, ConverterParameter={x:Type islog:DESFireKeyType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <ComboBox
                        x:Name="writeKeyTypeSelector"
                        Grid.Row="3"
                        Grid.Column="1"
                        Height="26"
                        Margin="9,3,7,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        ItemsSource="{dal:Enumerate {x:Type islog:DESFireKeyType}}"
                        SelectedItem="{Binding SelectedDesfireWriteKeyEncryptionType, Converter={StaticResource Localization}, ConverterParameter={x:Type islog:DESFireKeyType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Label
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="9,3,7,7"
                        VerticalAlignment="Stretch"
                        Content="Read Key No." />
                    <Label
                        Grid.Row="3"
                        Grid.Column="2"
                        Margin="9,3,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Write Key No." />
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="3"
                        Height="26"
                        Margin="9,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        ItemsSource="{Binding MifareDesfireKeys}"
                        SelectedItem="{Binding SelectedDesfireReadKeyNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <ComboBox
                        Grid.Row="3"
                        Grid.Column="3"
                        Height="26"
                        Margin="9,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        ItemsSource="{Binding MifareDesfireKeys}"
                        SelectedItem="{Binding SelectedDesfireWriteKeyNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Label
                        Grid.Row="4"
                        Grid.Column="0"
                        Margin="8,3,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Data Index Start Position" />
                    <Label
                        Grid.Row="4"
                        Grid.Column="2"
                        Margin="9,3,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="Byte Count" />
                    <TextBox
                        Grid.Row="4"
                        Grid.Column="1"
                        Width="104"
                        Height="26"
                        Margin="9,3,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding GrandChildNodeViewModel.SelectedDataIndexStartInBytes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <TextBox
                        Grid.Row="4"
                        Grid.Column="3"
                        Height="26"
                        Margin="9,3,7,0"
                        VerticalAlignment="Top"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Text="{Binding GrandChildNodeViewModel.SelectedDataLengthInBytes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Button
                        Grid.Row="6"
                        Grid.Column="0"
                        Grid.ColumnSpan="5"
                        Height="23"
                        Margin="8,0,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Command="{Binding GetDataFromFileCommand}"
                        Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='buttonContentMifareDesfireFileSetupOpenDataFile'}" />
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180" />
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="42" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                    </Grid.RowDefinitions>
                </Grid>
            </GroupBox>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
        </Grid>
    </Grid>
</UserControl>