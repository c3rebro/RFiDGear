<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="RFiDGear.View.TabPageMifareClassicDataExplorerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls0="clr-namespace:RFiDGear.View"
    xmlns:Controls1="clr-namespace:LibLogicalAccess;assembly=Interop.LibLogicalAccess"
    xmlns:_3rdP="clr-namespace:RFiDGear._3rdParty"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dal="clr-namespace:RFiDGear.DataAccessLayer"
    xmlns:local="clr-namespace:RFiDGear"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:RFiDGear.ViewModel"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConv" />
        <dal:BindingProxy x:Key="proxy" Data="{Binding}" />
        <dal:ResourceLoader x:Key="Localization" />
        <!--<ContextMenu  x:Key="RowMenu" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RowContextMenu}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem">
					<Setter
						Property="HorizontalContentAlignment"
						Value="Left" />
					<Setter
						Property="VerticalContentAlignment"
						Value="Center" />
				</Style>
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>-->
    </UserControl.Resources>
    <Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.45*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="0.55*" />
            </Grid.ColumnDefinitions>
            <GridSplitter
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="1"
                Width="5"
                Margin="0,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#FFD9D9DB"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Auto" />
            <GroupBox
                Grid.Row="0"
                Grid.Column="0"
                Margin="8,0,8,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="Data on Chip"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserDeleteRows="False"
                        CanUserReorderColumns="False"
                        CanUserSortColumns="False"
                        ItemsSource="{Binding ChildNodeViewModelFromChip.Children, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
                                <!--<Setter Property="ToolTip" Value="{StaticResource DescriptionToolTip}" />-->
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                                <Setter Property="Header" Value="{Binding GrandChildNodeHeader}" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="False">
                                        <Setter Property="Foreground" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <!--
                            {Binding Data.LocalizationResourceSet,
                            Converter={StaticResource Localization},
                            ConverterParameter='dataGridHeaderMainWindowEventName',
                            Source={StaticResource proxy}}
                        -->
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Hex">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BindableSelectionLength="{Binding SelectedDataLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BindableSelectionStart="{Binding SelectedDataIndexStart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            IsFocused="{Binding IsFocused}"
                                            Text="{Binding DataAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="MaxWidth" Value="250" />
                                                    <!--													<Setter
														Property="VerticalAlignment"
														Value="Top" />
													<Setter
														Property="HorizontalAlignment"
														Value="Left" />
													<Setter
														Property="Background"
														Value="Transparent" />-->
                                                    <Setter Property="IsReadOnly" Value="True" />
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="String">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            MaxWidth="180"
                                            MaxHeight="100"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <Setter Property="IsReadOnly" Value="True" />

                                                    <!--<Style.Triggers>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="True">
															<Setter
																Property="Foreground"
																Value="Black" />
														</DataTrigger>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="False">
															<Setter
																Property="Foreground"
																Value="Red" />
														</DataTrigger>
													</Style.Triggers>-->
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Row="1"
                Grid.Column="0"
                Margin="8,0,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="Data in Memory/File"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserReorderColumns="False"
                        CanUserSortColumns="False"
                        ItemsSource="{Binding ChildNodeViewModelTemp.Children}">
                        <!--  SelectedItem="{Binding SelectedDataGridItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  -->
                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <!--<Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />-->
                                <!--<Setter Property="ToolTip" Value="{StaticResource DescriptionToolTip}" />-->
                                <!--<Setter Property="IsSelected" Value="{Binding DataContext.IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                                <Setter Property="Header" Value="{Binding GrandChildNodeHeader}" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="False">
                                        <Setter Property="Foreground" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidDataContent}" Value="{x:Null}">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Hex">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BindableSelectionLength="{Binding SelectedDataLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BindableSelectionStart="{Binding SelectedDataIndexStart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            IsFocused="{Binding IsFocused}"
                                            Text="{Binding DataAsHexString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="MaxWidth" Value="250" />
                                                    <!--													<Setter
														Property="VerticalAlignment"
														Value="Top" />
													<Setter
														Property="HorizontalAlignment"
														Value="Left" />
													<Setter
														Property="Background"
														Value="Transparent" />-->
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidSelectedDataIndexAndLength}" Value="True">
                                                            <Setter Property="Foreground" Value="Black" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidSelectedDataIndexAndLength}" Value="False">
                                                            <Setter Property="Foreground" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="String">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <_3rdP:SelectionBindingTextBox
                                            MaxWidth="180"
                                            MaxHeight="100"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Top"
                                            BorderThickness="0"
                                            FontFamily="Lucida Console"
                                            Text="{Binding DataAsCharString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <_3rdP:SelectionBindingTextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                                    <!--<Style.Triggers>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="True">
															<Setter
																Property="Foreground"
																Value="Black" />
														</DataTrigger>
														<DataTrigger
															Binding="{Binding IsValidSelectedDataIndexAndLength}"
															Value="False">
															<Setter
																Property="Foreground"
																Value="Red" />
														</DataTrigger>
													</Style.Triggers>-->
                                                </Style>
                                            </_3rdP:SelectionBindingTextBox.Style>
                                        </_3rdP:SelectionBindingTextBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="7,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="Read | Write Data"
                IsEnabled="{Binding IsDataExplorerEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Button
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Height="23"
                        Margin="7.5,0,7.5,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Command="{Binding WriteDataCommand}"
                        Content="Write" />
                    <Button
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Height="23"
                        Margin="7.5,0,7.5,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Command="{Binding ReadDataCommand}"
                        Content="Read" />
                    <GroupBox
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="8,8,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Header="Direct Access"
                        IsEnabled="{Binding UseMADInvert}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="185" />
                                <ColumnDefinition Width="0.287459850407673*" />
                            </Grid.ColumnDefinitions>
                            <Label
                                Grid.Row="0"
                                Grid.Column="0"
                                Height="26"
                                Margin="14,8,7,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Content="Data Block to Read/Write" />
                            <ComboBox
                                Grid.Row="0"
                                Grid.Column="1"
                                Height="23"
                                Margin="9,8,7,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                FocusManager.IsFocusScope="True"
                                ItemsSource="{dal:Enumerate {x:Type dal:DataExplorer_DataBlock}}"
                                SelectedItem="{Binding SelectedDataBlockToReadWrite, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:DataExplorer_DataBlock}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="8,1,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Header="MAD Access"
                        Visibility="{Binding UseMAD, Converter={StaticResource BoolToVisConv}, FallbackValue=Visible}">
                        <Grid>
                            <Label
                                Grid.Row="0"
                                Grid.Column="0"
                                Height="26"
                                Margin="8,9,7,7"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="Application ID" />
                            <Label
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="8,3,7,7"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="@Sector" />
                            <ComboBox
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="8,7.00000000000003,7,7"
                                HorizontalAlignment="Stretch"
                                ItemsSource="{Binding MADSectors}"
                                SelectedItem="{Binding SelectedMADSector, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            <Grid
                                Grid.Row="4"
                                Grid.Column="0"
                                Grid.ColumnSpan="5"
                                Margin="0,1,-1,-1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <GroupBox
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="8,8,7,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Header="Key - Current">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="42" />
                                            <RowDefinition Height="36" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="110.554888163972" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="8,8,7,8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='labelContentMifareClassicSetupKeyAValue'}" />
                                        <Label
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Margin="8,3,7,7"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='labelContentMifareClassicSetupKeyBValue'}" />
                                        <TextBox
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="9,8,7,8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            FontFamily="Lucida Console"
                                            IsEnabled="False"
                                            Text="{Binding ClassicKeyAKeyCurrent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <TextBox.Resources>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyAKeyCurrent}" Value="True">
                                                            <Setter Property="Foreground" Value="Green" />
                                                            <Setter Property="Background" Value="White" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyAKeyCurrent}" Value="False">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="Background" Value="Red" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>
                                        </TextBox>
                                        <TextBox
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="9,3,7,7"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            FontFamily="Lucida Console"
                                            IsEnabled="False"
                                            Text="{Binding ClassicKeyBKeyCurrent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <TextBox.Resources>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyBKeyCurrent}" Value="True">
                                                            <Setter Property="Foreground" Value="Green" />
                                                            <Setter Property="Background" Value="White" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyBKeyCurrent}" Value="False">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="Background" Value="Red" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>
                                        </TextBox>
                                    </Grid>
                                </GroupBox>
                                <GroupBox
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="2.50000000000023,8,8,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Header="Key - Target">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="42" />
                                            <RowDefinition Height="36" />
                                            <RowDefinition Height="36" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="110.554888163972" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="8,8,7,8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='labelContentMifareClassicSetupKeyAValue'}" />
                                        <Label
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Margin="8,3,7,7"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{Binding LocalizationResourceSet, Converter={StaticResource Localization}, ConverterParameter='labelContentMifareClassicSetupKeyBValue'}" />
                                        <TextBox
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="9,8,7,8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            FontFamily="Lucida Console"
                                            Text="{Binding ClassicKeyAKeyTarget, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <TextBox.Resources>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyAKeyTarget}" Value="True">
                                                            <Setter Property="Foreground" Value="Green" />
                                                            <Setter Property="Background" Value="White" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyAKeyTarget}" Value="False">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="Background" Value="Red" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>
                                        </TextBox>
                                        <TextBox
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Margin="9,3,7,7"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Left"
                                            VerticalContentAlignment="Center"
                                            FontFamily="Lucida Console"
                                            Text="{Binding ClassicKeyBKeyTarget, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                            <TextBox.Resources>
                                                <Style TargetType="TextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyBKeyTarget}" Value="True">
                                                            <Setter Property="Foreground" Value="Green" />
                                                            <Setter Property="Background" Value="White" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValidClassicKeyBKeyTarget}" Value="False">
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="Background" Value="Red" />
                                                            <Setter Property="FontWeight" Value="Normal" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Resources>
                                        </TextBox>
                                    </Grid>
                                </GroupBox>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.492234640503342*" />
                                    <ColumnDefinition Width="0.507765359496658*" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <CheckBox
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Height="15"
                                Margin="8,9,7,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Content="Use MAD Authentification"
                                IsChecked="{Binding UseMadAuth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            <Label
                                Grid.Row="3"
                                Grid.Column="0"
                                Margin="8,3,68,7"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="Size" />
                            <TextBox
                                Grid.Row="3"
                                Grid.Column="1"
                                Height="26"
                                Margin="9,3,7,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                HorizontalContentAlignment="Left"
                                VerticalContentAlignment="Center"
                                Text="{Binding FileSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

                                <TextBox.Resources>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsValidFileSize}" Value="True">
                                                <Setter Property="Foreground" Value="Green" />
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsValidFileSize}" Value="False">
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter Property="Background" Value="Red" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>
                            <TextBox
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="9,8,8,8"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Left"
                                VerticalContentAlignment="Center"
                                Text="{Binding AppNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <TextBox.Resources>
                                    <Style TargetType="TextBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsValidAppNumber}" Value="True">
                                                <Setter Property="Foreground" Value="Green" />
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsValidAppNumber}" Value="False">
                                                <Setter Property="Foreground" Value="Black" />
                                                <Setter Property="Background" Value="Red" />
                                                <Setter Property="FontWeight" Value="Normal" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180" />
                                <ColumnDefinition Width="120" />
                                <ColumnDefinition Width="120" />
                                <ColumnDefinition Width="119.380071130415" />
                                <ColumnDefinition Width="0.226403426792149*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36" />
                                <RowDefinition Height="36" />
                                <RowDefinition Height="36" />
                                <RowDefinition Height="36" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                        </Grid>
                    </GroupBox>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="186" />
                        <ColumnDefinition Width="181*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80.7203331950994" />
                        <RowDefinition Height="0.352718148131878*" />
                        <RowDefinition Height="36" />
                        <RowDefinition Height="36" />
                    </Grid.RowDefinitions>
                </Grid>
            </GroupBox>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
            </Grid.RowDefinitions>
        </Grid>
    </Grid>
</UserControl>