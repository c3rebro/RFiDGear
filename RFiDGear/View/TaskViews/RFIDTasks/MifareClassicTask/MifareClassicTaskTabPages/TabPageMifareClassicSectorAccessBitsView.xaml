<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="RFiDGear.View.TabPageMifareClassicSectorAccessBitsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dal="clr-namespace:RFiDGear.DataAccessLayer"
    xmlns:local="clr-namespace:RFiDGear"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <UserControl.Resources>
        <dal:BindingProxy x:Key="proxy" Data="{Binding}" />
        <dal:ResourceLoader x:Key="Localization" />
        <!--<ContextMenu  x:Key="RowMenu" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.RowContextMenu}">
			<ContextMenu.ItemContainerStyle>
				<Style TargetType="MenuItem">
					<Setter
						Property="HorizontalContentAlignment"
						Value="Left" />
					<Setter
						Property="VerticalContentAlignment"
						Value="Center" />
				</Style>
			</ContextMenu.ItemContainerStyle>
		</ContextMenu>-->
    </UserControl.Resources>
    <Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.55*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="0.45*" />
            </Grid.ColumnDefinitions>
            <GridSplitter
                Grid.Row="0"
                Grid.Column="1"
                Width="5"
                Margin="0,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#FFD9D9DB"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Auto" />
            <GroupBox
                Grid.Row="0"
                Grid.Column="0"
                Margin="8,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="Sector Trailer | Access Bits"
                IsEnabled="{Binding IsAccessBitsEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="8,8,8,8"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        AlternatingRowBackground="LightGray"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserReorderColumns="True"
                        CanUserSortColumns="True"
                        ItemsSource="{Binding SectorTrailerSource}"
                        SelectedItem="{Binding Path=Selected_Sector_AccessCondition}"
                        SelectionMode="Single">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <!-- <DataGridTextColumn
					Header="{Binding Data.LocalizationResourceSet,
					Converter={StaticResource Localization},
					ConverterParameter='dataGridHeaderUnlockEventConfigDialogTriggerType',
					Source={StaticResource proxy}}"
					IsReadOnly="True"
					Binding="{Binding Path=DoorMonitoringTrigger, Converter={StaticResource Localization}, ConverterParameter={x:Type local:DoorMonEventType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                            <DataGridTextColumn
                                Binding="{Binding Path=Read_KeyA, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Read Key A"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Write_KeyA, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Write Key A"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Read_AccessCondition_MifareClassicSectorTrailer, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Read Access Bits"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Write_AccessCondition_MifareClassicSectorTrailer, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Write Access Bits"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Read_KeyB, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Read Key B"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Write_KeyB, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Write Key B"
                                IsReadOnly="True" />
                            <!--<DataGridTemplateColumn
								Header="tadaaa">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<ComboBox />
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Row="0"
                Grid.Column="2"
                Margin="7,8,8,8"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Header="Data Block | Access Bits"
                IsEnabled="{Binding IsAccessBitsEditTabEnabled}">
                <Grid
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <DataGrid
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Margin="8,2,7,7"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        AlternatingRowBackground="LightGray"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserReorderColumns="True"
                        CanUserSortColumns="True"
                        ItemsSource="{Binding DataBlockSource}"
                        SelectedItem="{Binding Path=Selected_DataBlock_AccessCondition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        SelectionMode="Single">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <!-- <DataGridTextColumn
					Header="{Binding Data.LocalizationResourceSet,
					Converter={StaticResource Localization},
					ConverterParameter='dataGridHeaderUnlockEventConfigDialogTriggerType',
					Source={StaticResource proxy}}"
					IsReadOnly="True"
					Binding="{Binding Path=DoorMonitoringTrigger, Converter={StaticResource Localization}, ConverterParameter={x:Type local:DoorMonEventType}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->
                            <DataGridTextColumn
                                Binding="{Binding Path=Read_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Read Data Block"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Write_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Write Data Block"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Increment_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Inc. Data Block"
                                IsReadOnly="True" />
                            <DataGridTextColumn
                                Binding="{Binding Path=Decrement_DataBlock, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:AccessCondition_MifareClassicSectorTrailer}, UpdateSourceTrigger=PropertyChanged}"
                                Header="Dec. Data Block"
                                IsReadOnly="True" />
                            <!--							<DataGridTemplateColumn
								Header="tadaaa">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<Grid>
											<ComboBox />
										</Grid>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        Height="26"
                        Margin="8,9,7,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Content="DataBlock Selection" />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="1"
                        Width="90"
                        Margin="8,8,8,8"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        IsEnabled="{Binding DataBlockSelectionComboBoxIsEnabled}"
                        ItemsSource="{dal:Enumerate {x:Type dal:SectorTrailer_DataBlock}}"
                        SelectedItem="{Binding Selected_DataBlockType, Converter={StaticResource Localization}, ConverterParameter={x:Type dal:SectorTrailer_DataBlock}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <CheckBox
                        Grid.Row="0"
                        Grid.Column="2"
                        Canvas.Left="194"
                        Canvas.Top="8"
                        Width="81"
                        Height="16"
                        Margin="12,14,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Content="Combined"
                        IsChecked="{Binding DataBlockIsCombinedToggleButtonIsChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        Canvas.Left="582"
                        Canvas.Top="38"
                        Width="85"
                        Height="27"
                        Margin="8,2,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Content="Sector Trailer:" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        Height="26"
                        Margin="9,3,7,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        BorderThickness="1,1,1,1"
                        FontFamily="Lucida Console"
                        Text="{Binding SectorTrailer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <TextBox.Resources>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValidSectorTrailer}" Value="True">
                                        <Setter Property="Foreground" Value="Green" />
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValidSectorTrailer}" Value="False">
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Background" Value="Red" />
                                        <Setter Property="FontWeight" Value="Normal" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>